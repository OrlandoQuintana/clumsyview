<svg id="gw96" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 89 89">

<style><![CDATA[

  #gw96 {
    overflow: hidden;
    outline: none;
    box-shadow: none;
    height: 100%;
  }

  @media (min-aspect-ratio: 1/1) {
    #gw96 {
      height: 100%;
      width: auto;
      margin: 0 auto;
    }
  }

  #gw96 .tickers path:nth-child(2) {
    transform: translateY(10px);
  }

  #gw96 .tickers path:nth-child(3) {
    transform: translateY(20px);
  }

  #gw96 .tickers path:nth-child(4) {
    transform: translateY(30px);
  }

  #gw96 .tickers path:nth-child(5) {
    transform: translateY(40px);
  }

  #gw96 .arcade-joystick .arcade-joystick-stick {
    transition: 0.2s ease;
    transform-origin: bottom center;
    transform-box: fill-box;
  }

  #gw96 .arcade-joystick.moveleft .arcade-joystick-stick {
    transform: skew(18deg);
  }

  #gw96 .arcade-joystick.moveright .arcade-joystick-stick {
    transform: skew(-18deg);
  }

  #gw96 .arcade-joystick .arcade-joystick-top {
    transition: 0.2s ease;
    transform-origin: center;
    transform-box: fill-box;
  }

  #gw96 .arcade-joystick.moveleft .arcade-joystick-top {
    transform: translate3d(-3px, 1px, 0);
  }

  #gw96 .arcade-joystick.moveright .arcade-joystick-top {
    transform: translate3d(3px, 1px, 0);
  }

  #gw96 .arcade-button {
    transition: 0.2s ease;
    transform-origin: bottom center;
    transform-box: fill-box;
  }

  #gw96 .arcade-button.pressin {
    transform: scale(1, 0.5);
  }

  #gw96 .arcade-screen {
    pointer-events: none;
  }

]]></style>

<path class="background" fill="#233C3F" d="M0 0h89v89H0z"/>

<a href="https://ipfs.io/ipfs/QmQCCo2eMJaGEH6KUzKR4RL8igWp9zN8cc3vTmZgikn9Jq?filename=gw96.html" target="_blank">
  <path class="title" fill="#FFF" d="M64 10v2h-1v-2h-1v5h1v-2h1v2h1v-5zm-4 5h1v-1h-2v1zm-2-3v2h1v-3h-1zm1-2v1h2v-1h-1zm-4 0h-1v1h1v4h1v-4h1v-1h-1zm-3 2h-1v-1h-1v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1zm-3 1v3h1v-4h-1zm-1 3h1v1h-1zm-1-1h1v1h-1zm-1 0v-3h-1v5h2v-1h-1zm-3-3h-2v1h1v4h1v-4h1v-1zm-6 4v1h2v-1h-1zm2-1h1v1h-1zm-1-1h1v1h-1zm-1-1h1v1h-1zm1-1v1h2v-1h-1zm-4 0h1v1h-1zm1 2v2h1v-3h-1zm-1 2h1v1h-1zm0-2v-1h-1v3h1v-1zm-3-1v1h-1v-2h-1v5h1v-2h1v2h1v-5h-1zm-5 1v1h1v1h-2v1h3v-3h-1zm1-1v-1h-2v1h1zm-2 1v-1h-1v3h1v-1z"/>
</a>

<g class="tickers" fill="#FFF">
  <path d="M19 22h-1v-1h-1v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1zm-3 2v2h1v-3h-1zm-1 1v-2h1v-1h-2v5h2v-1h-1zm-3-1h-1v-1H9v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1z"/>
  <path d="M19 25h1v-1h-2v1zm-1-5v1h2v-1h-1zm-1 2v2h1v-3h-1zm-3-2h-1v1h1v4h1v-4h1v-1h-1zm-3 3h1v1h-1zm0-2h1v1h-1zm-1 0h1v-1H9v5h2v-1h-1v-1h1v-1h-1z"/>
  <path d="M18 20h-1v1h1v4h1v-4h1v-1h-1zm-3 2v2h1v-3h-1zm-1 2h1v1h-1zm0-4h1v1h-1zm0 2v-1h-1v3h1v-1zm-3 0v2h1v-3h-1zm-1 1v-2h1v-1H9v5h2v-1h-1z"/>
  <path d="M27 21h-1v-1h2v1h-1zm0 4h1v-1h-2v1h1zm-1-3v-1h-1v3h1v-2zm-3-1v4h1v-5h-1v1zm-3-1h-1v1h1v4h1v-4h1v-1h-2zm-3 2h-1v-1h-1v4h1v-2h1v2h1v-4h-1v1zm0-2h-1v1h1v-1zm-4 2v3h1v-4h-1v1zm-1-2v1h1v-1h-1zm-1 2h1v-1h-1v1zm-1-2H9v5h1v-4h1v-1h-1z"/>
  <path d="M21 24v-1h1v1h-1zm1-2v-1h-1v1h1zm-2 0v-1h1v-1h-2v5h2v-1h-1v-1h1v-1h-1zm-3-1v4h1v-5h-1v1zm-2 0v1h-1v-2h-1v5h1v-2h1v2h1v-5h-1v1zm-3 3v-1h-1v1h1zm-1-1v-1h-1v1h1zm-1-3v1h2v-1h-2zm-1 4v1h2v-1H9zm0-2h1v-1H9v1z"/>
</g>

<g class="digits" fill="#FFF" style="display: none;">
  <path class="zero" d="M79 20h-2v5h3v-5h-1zm0 2v2h-1v-3h1v1z"/>
  <path class="one" d="M80 24v1h-3v-1h1v-2h-1v-1h1v-1h1v4h1z"/>
  <path class="two" d="M80 22h-1v-1h1v1zm-1 3h1v-1h-2v1h1zm0-3h-1v1h1v-1zm-1-2h-1v1h2v-1h-1zm-1 3v1h1v-1h-1z"/>
  <path class="three" d="M79 24v-1h1v1h-1zm1-3h-1v1h1v-1zm-2 1v1h1v-1h-1zm0-2h-1v1h2v-1h-1zm-1 4v1h2v-1h-2z"/>
  <path class="four" d="M80 21v4h-1v-2h-2v-3h1v2h1v-1h1z"/>
  <path class="five" d="M79 24v-1h1v1h-1zm0-3h1v-1h-3v3h2v-1h-1v-1h1zm-2 3v1h2v-1h-2z"/>
  <path class="six" d="M79 21h-1v-1h2v1h-1zm-2 0v3h1v-1h1v1h-1v1h2v-3h-2v-1h-1z"/>
  <path class="seven" d="M80 20v5h-1v-4h-2v-1h3z"/>
  <path class="eight" d="M79 20h-2v5h3v-5h-1zm0 4h-1v-1h1v1zm0-2h-1v-1h1v1z"/>
  <path class="nine" d="M79 20h-2v3h2v2h1v-5h-1zm0 2h-1v-1h1v1z"/>
  <path class="decimal" d="M71 24h1v1h-1z"/>
</g>

<g class="prices" fill="#FFF">
  <g class="line-0"></g>
  <g class="line-1"></g>
  <g class="line-2"></g>
  <g class="line-3"></g>
  <g class="line-4"></g>
</g>

<g class="arcade"><path fill="#1F1F42" d="M7 84H6v1H5v1H4v1h81v-1h-1v-1h-1v-1h-1v-1H7v1zM86 9V8h-1V7h-1V6h-1V5h-1V4H7v1H6v1H5v1H4v1H3v1H2v71h1v1h1v1h1v1h2v-1H6v-1H5v-1H4v-1H3V10h1V9h1V8h1V7h1V6h1V5h73v1h1v1h1v1h1v1h1v1h1v69h-1v1h-1v1h-1v1h-1v1h2v-1h1v-1h1v-1h1V9h-1z"/><path d="M3 86h1v1h81v-1h1v1h1v1H2v-1h1v-1zm82-76h1v69h-1V10zm-1-1h1v1h-1V9zm0 70h1v1h-1v-1zm0 6h1v1h-1v-1zM83 8h1v1h-1V8zm0 72h1v1h-1v-1zm0 4h1v1h-1v-1zM82 7h1v1h-1V7zm0 74h1v1h-1v-1zm0 2h1v1h-1v-1zM81 6h1v1h-1V6zm0-1v1H8V5h73zM60 82h22v1H7v-1h53zM7 6h1v1H7V6zM6 81h1v1H6v-1zM6 7h1v1H6V7zm0 76h1v1H6v-1zm-1-3h1v1H5v-1zM5 8h1v1H5V8zm0 76h1v1H5v-1zm-1-5h1v1H4v-1zM4 9h1v1H4V9zm0 76h1v1H4v-1zM3 10h1v69H3V10zm5-7H7v1h75V3H8zm74 1h1v1h-1V4zm1 1h1v1h-1V5zm1 1h1v1h-1V6zm1 1h1v1h-1V7zm1 1h1v1h-1V8zm1 1h1v71h-1V9zm-1 71h1v1h-1v-1zm-1 1h1v1h-1v-1zm-1 1h1v1h-1v-1zm-1 1h1v1h-1v-1zM5 83h1v1H5v-1zm-1-1h1v1H4v-1zm-1-1h1v1H3v-1zm-1-1h1v1H2v-1zM1 9h1v71H1V9zm1-1h1v1H2V8zm1-1h1v1H3V7zm1-1h1v1H4V6zm1-1h1v1H5V5zm1-1h1v1H6V4z"/><path class="arcade-screen" fill="#1B663A" d="M84 10V9h-1V8h-1V7h-1V6H8v1H7v1H6v1H5v1H4v69h1v1h1v1h1v1h75v-1h1v-1h1v-1h1V10h-1z" opacity=".3"/><path d="M23 83h-3v1h-1v2h5v-2h-1z"/><path fill="#4C4C4C" d="M20 84h3v1h-3z"/><path d="M16 82h-3v1h-1v2h5v-2h-1z"/><path fill="#4C4C4C" d="M13 83h3v1h-3z"/><path d="M70 83h-3v1h-1v2h5v-2h-1z"/><path fill="#4C4C4C" d="M67 84h3v1h-3z"/><path d="M40 86v-2h1v-1h7v1h1v2h-1v1h-7v-1z"/><path fill="#3D3D3D" d="M41 84v2h7v-2h-7z"/><g class="arcade-joystick"><g class="arcade-joystick-stick"><path d="M43 75v10h1v-1h1v1h1V75z"/><path fill="#3D3D3D" d="M45 85v-9h-1v9h1z"/></g><g class="arcade-joystick-top"><path d="M41 75h1v1h5v-1h1v-1h1v-1h1v-5h-1v-1h-1v-1h-1v-1h-5v1h-1v1h-1v1h-1v5h1v1h1z"/><path fill="#FF3347" d="M48 68v-1h-1v-1h-5v1h-1v1h-1v5h1v1h1v1h5v-1h1v-1h1v-5h-1z"/><path fill="#FFF" d="M46 67h-3v1h-1v1h1v1h3v-1h1v-1h-1z" opacity=".25"/></g></g><g class="arcade-button"><path d="M27 82v4h10v-4h-1v-1h-8v1z"/><path fill="#5BFF33" d="M28 82h8v3h-8v-3z"/><path fill="#FFF" d="M29 82h6v1h-6z" opacity=".25"/></g><g class="arcade-button"><path d="M52 82v4h10v-4h-1v-1h-8v1z"/><path fill="#6410C6" d="M53 82h8v3h-8v-3z"/><path fill="#FFF" d="M54 82h6v1h-6z" opacity=".25"/></g></g>

<script type='text/javascript'><![CDATA[

  const gw96Root = document.getElementById('gw96');

  if (gw96Root) {
    const gwRoot = gw96Root;

    const getPrice = (data, ticker) => {
      return data[ticker];
    }

    fetch('https://www.clumsyghosts.com/json/prices.json')
      .then(response => response.json())
      .then(json => {

        console.log('Last updated: ' + json.updated);
        
        const tickers = ['ADA', 'BTC', 'DOT', 'MATIC', 'SHIB'];
        
        const prices = [
          getPrice(json.prices, tickers[0]),
          getPrice(json.prices, tickers[1]),
          getPrice(json.prices, tickers[2]),
          getPrice(json.prices, tickers[3]),
          getPrice(json.prices, tickers[4]),
        ];

        const digitsGroup = gwRoot.querySelector('.digits');
        const pricesGroup = gwRoot.querySelector('.prices');
        let lineOffset = 0;

        for (let i=0; i<5; i++) {
          const line = pricesGroup.querySelector('.line-' + i);
          line.style.transform = 'translateY(' + lineOffset + 'px)';
          lineOffset += 10;

          const digits = String(prices[i]);
          const numDigits = digits.length;

          let digitOffset = 4 * numDigits - 6;

          for (let j = 0; j < numDigits; j++) {
            const digit = digits.charAt(j);

            switch (digit) {
              case '.':
                line.appendChild(digitsGroup.querySelector('.decimal').cloneNode(true)).style.transform = 'translateX(-' + (digitOffset - 6) + 'px)';
                digitOffset += 2;
                break;
              case '0':
                line.appendChild(digitsGroup.querySelector('.zero').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '1':
                line.appendChild(digitsGroup.querySelector('.one').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '2':
                line.appendChild(digitsGroup.querySelector('.two').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '3':
                line.appendChild(digitsGroup.querySelector('.three').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '4':
                line.appendChild(digitsGroup.querySelector('.four').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '5':
                line.appendChild(digitsGroup.querySelector('.five').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '6':
                line.appendChild(digitsGroup.querySelector('.six').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '7':
                line.appendChild(digitsGroup.querySelector('.seven').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '8':
                line.appendChild(digitsGroup.querySelector('.eight').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '9':
                line.appendChild(digitsGroup.querySelector('.nine').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
            }

            digitOffset -= 4;
          }
        }

      })
      .catch(error => {
        console.error('Failed to fetch:', error);
      });
      
    let joystick = gwRoot.querySelector('.arcade-joystick');
    let buttons = gwRoot.querySelectorAll('.arcade-button');
    let arcadeAnimating = false;

    joystick.addEventListener('click', () => {
      if (arcadeAnimating == false) {
        arcadeAnimating = true;
        rand = Math.floor(Math.random() * 2 + 1);

        if (rand == 1) {
          joystick.classList.add('moveleft');
        }
        else if (rand == 2) {
          joystick.classList.add('moveright');
        }

        setTimeout(() => {
          arcadeAnimating = false;
          joystick.classList.remove('moveleft');
          joystick.classList.remove('moveright');
        }, 1000);
      }
    });

    buttons.forEach(button => {
      button.addEventListener('click', () => {
        if (arcadeAnimating == false) {
          arcadeAnimating = true;

          button.classList.add('pressin');

          setTimeout(() => {
            arcadeAnimating = false;
            button.classList.remove('pressin');
          }, 500);
        }
      });
    });
      
  }

]]></script>

</svg>