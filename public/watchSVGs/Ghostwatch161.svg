<svg id="gw161" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 89 89">

<style><![CDATA[

  #gw161 {
    overflow: hidden;
    outline: none;
    box-shadow: none;
    height: 100%;
  }

  @media (min-aspect-ratio: 1/1) {
    #gw161 {
      height: 100%;
      width: auto;
      margin: 0 auto;
    }
  }

  #gw161 .tickers path:nth-child(2) {
    transform: translateY(10px);
  }

  #gw161 .tickers path:nth-child(3) {
    transform: translateY(20px);
  }

  #gw161 .tickers path:nth-child(4) {
    transform: translateY(30px);
  }
  
  #gw161 .guitar.raise {
    animation: gw-raise 2s linear 0s 1;
    transform-origin: center left;
    transform-box: fill-box;
  }

  @keyframes gw-raise {
    0% {
      transform: rotate(0);
    }
    5% {
      transform: rotate(-7deg);
    }
    7% {
      transform: rotate(1deg);
    }
    13% {
      transform: rotate(-4deg);
    }
    20% {
      transform: rotate(1deg);
    }
    25% {
      transform: rotate(-5deg);
    }
    32% {
      transform: rotate(2deg);
    }
    40% {
      transform: rotate(-3deg);
    }
    44% {
      transform: rotate(0deg);
    }
    52% {
      transform: rotate(-8deg);
    }
    60% {
      transform: rotate(2deg);
    }
    66% {
      transform: rotate(-1deg);
    }
    70% {
      transform: rotate(3deg);
    }
    80% {
      transform: rotate(-5deg);
    }
    86% {
      transform: rotate(1deg);
    }
    94% {
      transform: rotate(-3deg);
    }
    100% {
      transform: rotate(0);
    }
  }

]]></style>

<path class="background" fill="#7850FF" d="M0 0h89v89H0z"/>

<a href="https://ipfs.io/ipfs/QmPHhDvRwqSPhJc6QxYMrQLSaqyD3xrEAb2Fv7ZDsJo7qQ?filename=gw161.html" target="_blank">
  <path class="title" fill="#FFF" d="M64 10v2h-1v-2h-1v5h1v-2h1v2h1v-5zm-4 5h1v-1h-2v1zm-2-3v2h1v-3h-1zm1-2v1h2v-1h-1zm-4 0h-1v1h1v4h1v-4h1v-1h-1zm-3 2h-1v-1h-1v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1zm-3 1v3h1v-4h-1zm-1 3h1v1h-1zm-1-1h1v1h-1zm-1 0v-3h-1v5h2v-1h-1zm-3-3h-2v1h1v4h1v-4h1v-1zm-6 4v1h2v-1h-1zm2-1h1v1h-1zm-1-1h1v1h-1zm-1-1h1v1h-1zm1-1v1h2v-1h-1zm-4 0h1v1h-1zm1 2v2h1v-3h-1zm-1 2h1v1h-1zm0-2v-1h-1v3h1v-1zm-3-1v1h-1v-2h-1v5h1v-2h1v2h1v-5h-1zm-5 1v1h1v1h-2v1h3v-3h-1zm1-1v-1h-2v1h1zm-2 1v-1h-1v3h1v-1z"/>
</a>

<g class="tickers" fill="#FFF">
  <path d="M19 22h-1v-1h-1v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1zm-3 2v2h1v-3h-1zm-1 1v-2h1v-1h-2v5h2v-1h-1zm-3-1h-1v-1H9v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1z"/>
  <path d="M18 24v-4h-1v5h3v-1h-1zm-3-2v2h1v-3h-1zm-1 2h1v1h-1zm0-4h1v1h-1zm0 2v-1h-1v3h1v-1zm-3 1h1v1h-1zm-1-1h1v1h-1zm0-2v1h2v-1h-1zm-1 4v1h2v-1h-1zm0-3h1v1H9z"/>
  <path d="M20 24v-1h1v1h-1zm-1-2v-1h1v-1h-2v5h2v-1h-1v-1h1v-1h-1zm2 0v-1h-1v1h1zm-5-1v1h-1v1h1v2h1v-5h-1v1zm-2 0v-1h-1v5h1v-3h1v-1h-1zm-2 3v-1h-1v1h1zm-1-2h1v-1h-1v1zm-1-1h1v-1H9v5h2v-1h-1v-1h1v-1h-1v-1z"/>
  <path d="M23 24v-1h1v2h-1v-1zm0-4v2h1v-2h-1zm-1 3h1v-1h-1v1zm-1 1v1h1v-2h-1v1zm1-4h-1v2h1v-2zm-3 2h-1v-1h-1v4h1v-2h1v2h1v-4h-1v1zm0-2h-1v1h1v-1zm-4 1v3h1v-4h-1v1zm-1 4h1v-1h-1v1zm0-3v-2h-1v4h1v-2zm-3 0h-1v-1H9v4h1v-2h1v2h1v-4h-1v1zm0-2h-1v1h1v-1z"/>
</g>

<g class="digits" fill="#FFF" style="display: none;">
  <path class="zero" d="M79 20h-2v5h3v-5h-1zm0 2v2h-1v-3h1v1z"/>
  <path class="one" d="M80 24v1h-3v-1h1v-2h-1v-1h1v-1h1v4h1z"/>
  <path class="two" d="M80 22h-1v-1h1v1zm-1 3h1v-1h-2v1h1zm0-3h-1v1h1v-1zm-1-2h-1v1h2v-1h-1zm-1 3v1h1v-1h-1z"/>
  <path class="three" d="M79 24v-1h1v1h-1zm1-3h-1v1h1v-1zm-2 1v1h1v-1h-1zm0-2h-1v1h2v-1h-1zm-1 4v1h2v-1h-2z"/>
  <path class="four" d="M80 21v4h-1v-2h-2v-3h1v2h1v-1h1z"/>
  <path class="five" d="M79 24v-1h1v1h-1zm0-3h1v-1h-3v3h2v-1h-1v-1h1zm-2 3v1h2v-1h-2z"/>
  <path class="six" d="M79 21h-1v-1h2v1h-1zm-2 0v3h1v-1h1v1h-1v1h2v-3h-2v-1h-1z"/>
  <path class="seven" d="M80 20v5h-1v-4h-2v-1h3z"/>
  <path class="eight" d="M79 20h-2v5h3v-5h-1zm0 4h-1v-1h1v1zm0-2h-1v-1h1v1z"/>
  <path class="nine" d="M79 20h-2v3h2v2h1v-5h-1zm0 2h-1v-1h1v1z"/>
  <path class="decimal" d="M71 24h1v1h-1z"/>
</g>

<g class="prices" fill="#FFF">
  <g class="line-0"></g>
  <g class="line-1"></g>
  <g class="line-2"></g>
  <g class="line-3"></g>
</g>

<g class="guitar"><path d="M79 76v-1h-2v-1h-1v-1h-1v1h-1v-1h-1v1h-1v1H33v-1h-4v-1h-3v-1h-3v-1h-4v-1h-1v-1h-3v-1h-4v1h-1v2h1v1h1v1h1v1h1v1h1v4h-1v2h-1v1h-1v1h-1v1h-1v2h1v1h5v-1h3v-1h3v-1h3v-1h1v-1h3v-1h4v-1h2v-1h38v1h3v-1h3v-1h1v-2z"/><path fill="#754C24" d="M49.12 76H65v2H35v-2h12.35zm19.17 0H72v2h-7v-2h2.88z"/><path fill="#F13441" d="M23 72v1h3v1h3v1h1v3h1v1h1v1h-3v1h-3v1h-1v1h-3v1h-3v1h-3v1h-5v-2h1v-1h1v-1h1v-1h1v-2h1v-4h-1v-1h-1v-1h-1v-1h-1v-1h-1v-2h4v1h3v1h1v1h3z"/><path fill="#FFF" d="M17 72h-1v1h2v-1h-1zm16 4v-1h-8v-1h-3v-1h-4v1h1v7h-1v1h-2v1h-1v1h3v-1h4v-1h2v-1h1v-1h8v-1h2v-3h-2z"/><path fill="#54341A" d="M76 76v-1h-3v4h3v-1h3v-2z"/><path fill="#FFF" d="M35 77h30v1H35zm30 0h7v1h-7zm8 1h3v1h-3z" opacity=".09"/><path fill="#E6E6E6" d="M20 77h15v1H20z"/><path d="M19 81v-7h1v7zm3-1v-5h1v5zm3-1v-3h1v3zm3 0v-3h1v3z"/><path d="M11 69h1v2h-1zm1 2h1v1h-1zm1 1h1v1h-1zm1 1h1v1h-1zm1 1h1v1h-1zm0 5h1v1h-1zm-1 2h1v1h-1zm-1 1h1v1h-1zm-1 1h1v1h-1zm-1 1h1v2h-1z" opacity=".17"/></g>

<script type='text/javascript'><![CDATA[

  const gw161Root = document.getElementById('gw161');

  if (gw161Root) {
    const gwRoot = gw161Root;

    const getPrice = (data, ticker) => {
      return data[ticker];
    }

    fetch('https://www.clumsyghosts.com/json/prices.json')
      .then(response => response.json())
      .then(json => {

        console.log('Last updated: ' + json.updated);
        
        const tickers = ['ADA', 'SOL', 'BNB', 'AVAX'];
        
        const prices = [
          getPrice(json.prices, tickers[0]),
          getPrice(json.prices, tickers[1]),
          getPrice(json.prices, tickers[2]),
          getPrice(json.prices, tickers[3]),
        ];

        const digitsGroup = gwRoot.querySelector('.digits');
        const pricesGroup = gwRoot.querySelector('.prices');
        let lineOffset = 0;

        for (let i=0; i<4; i++) {
          const line = pricesGroup.querySelector('.line-' + i);
          line.style.transform = 'translateY(' + lineOffset + 'px)';
          lineOffset += 10;

          const digits = String(prices[i]);
          const numDigits = digits.length;

          let digitOffset = 4 * numDigits - 6;

          for (let j = 0; j < numDigits; j++) {
            const digit = digits.charAt(j);

            switch (digit) {
              case '.':
                line.appendChild(digitsGroup.querySelector('.decimal').cloneNode(true)).style.transform = 'translateX(-' + (digitOffset - 6) + 'px)';
                digitOffset += 2;
                break;
              case '0':
                line.appendChild(digitsGroup.querySelector('.zero').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '1':
                line.appendChild(digitsGroup.querySelector('.one').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '2':
                line.appendChild(digitsGroup.querySelector('.two').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '3':
                line.appendChild(digitsGroup.querySelector('.three').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '4':
                line.appendChild(digitsGroup.querySelector('.four').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '5':
                line.appendChild(digitsGroup.querySelector('.five').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '6':
                line.appendChild(digitsGroup.querySelector('.six').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '7':
                line.appendChild(digitsGroup.querySelector('.seven').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '8':
                line.appendChild(digitsGroup.querySelector('.eight').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '9':
                line.appendChild(digitsGroup.querySelector('.nine').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
            }

            digitOffset -= 4;
          }
        }

      })
      .catch(error => {
        console.error('Failed to fetch:', error);
      });
      
    let guitar = gwRoot.querySelector('.guitar');
    let guitarAnimating = false;

    guitar.addEventListener('click', () => {
      if (guitarAnimating == false) {
        guitarAnimating = true;
        guitar.classList.add('raise');

        setTimeout(() => {
          guitarAnimating = false;
          guitar.classList.remove('raise');
        }, 2000);
      }
    });
      
  }

]]></script>

</svg>