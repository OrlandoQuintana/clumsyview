<svg id="gw119" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 89 89">

<style><![CDATA[

  #gw119 {
    overflow: hidden;
    outline: none;
    box-shadow: none;
    height: 100%;
  }

  @media (min-aspect-ratio: 1/1) {
    #gw119 {
      height: 100%;
      width: auto;
      margin: 0 auto;
    }
  }

  #gw119 .tickers path:nth-child(2) {
    transform: translateY(10px);
  }

  #gw119 .tickers path:nth-child(3) {
    transform: translateY(20px);
  }

  #gw119 .tickers path:nth-child(4) {
    transform: translateY(30px);
  }

  #gw119 .tickers path:nth-child(5) {
    transform: translateY(40px);
  }

  #gw119 .ghostie-head-head.bounce {
    animation: gw-bounce 0.2s linear 0s 1;
  }

  @keyframes gw-bounce {
    0% {
      transform: translate3d(0, 0, 0);
    }
    50% {
      transform: translate3d(0, -0.9px, 0);
    }
    100% {
      transform: translate3d(0, 0, 0);
    }
  }

  #gw119 .ghostie-head-eyes g {
    display: none;
  }

  #gw119 .ghostie-head-eyes g:first-child {
    display: block;
  }

]]></style>

<path class="background" fill="#35232A" d="M0 0h89v89H0z"/>

<a href="https://ipfs.io/ipfs/QmRzzzF6rhYsQCuzzdgyRsVYv3uKgQq3kc3cKD2SEos3KY?filename=gw119.html" target="_blank">
  <path class="title" fill="#FFF" d="M64 10v2h-1v-2h-1v5h1v-2h1v2h1v-5zm-4 5h1v-1h-2v1zm-2-3v2h1v-3h-1zm1-2v1h2v-1h-1zm-4 0h-1v1h1v4h1v-4h1v-1h-1zm-3 2h-1v-1h-1v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1zm-3 1v3h1v-4h-1zm-1 3h1v1h-1zm-1-1h1v1h-1zm-1 0v-3h-1v5h2v-1h-1zm-3-3h-2v1h1v4h1v-4h1v-1zm-6 4v1h2v-1h-1zm2-1h1v1h-1zm-1-1h1v1h-1zm-1-1h1v1h-1zm1-1v1h2v-1h-1zm-4 0h1v1h-1zm1 2v2h1v-3h-1zm-1 2h1v1h-1zm0-2v-1h-1v3h1v-1zm-3-1v1h-1v-2h-1v5h1v-2h1v2h1v-5h-1zm-5 1v1h1v1h-2v1h3v-3h-1zm1-1v-1h-2v1h1zm-2 1v-1h-1v3h1v-1z"/>
</a>

<g class="tickers" fill="#FFF">
  <path d="M19 22h-1v-1h-1v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1zm-3 2v2h1v-3h-1zm-1 1v-2h1v-1h-2v5h2v-1h-1zm-3-1h-1v-1H9v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1z"/>
  <path d="M22 21v1h1v1h-1v1h1v1h-2v-5h2v1h-1zm-4 1v-1h-1v3h1v-1h1v1h-1v1h2v-3h-2zm1-2h-1v1h1v-1zm-4 2v2h1v-3h-1v1zm-1 3h1v-1h-1v1zm1-5h-1v1h1v-1zm-1 2v-1h-1v3h1v-2zm-3 0v2h1v-3h-1v1zm-1 1v-2h1v-1H9v5h2v-1h-1v-1z"/>
  <path d="M27 21h-1v-1h2v1h-1zm0 4h1v-1h-2v1h1zm-1-3v-1h-1v3h1v-2zm-3-1v4h1v-5h-1v1zm-3-1h-1v1h1v4h1v-4h1v-1h-2zm-3 2h-1v-1h-1v4h1v-2h1v2h1v-4h-1v1zm0-2h-1v1h1v-1zm-4 2v3h1v-4h-1v1zm-1-2v1h1v-1h-1zm-1 2h1v-1h-1v1zm-1-2H9v5h1v-4h1v-1h-1z"/>
  <path d="M21 24v-1h1v1h-1zm1-2v-1h-1v1h1zm-2 0v-1h1v-1h-2v5h2v-1h-1v-1h1v-1h-1zm-3-1v4h1v-5h-1v1zm-2 0v1h-1v-2h-1v5h1v-2h1v2h1v-5h-1v1zm-3 3v-1h-1v1h1zm-1-1v-1h-1v1h1zm-1-3v1h2v-1h-2zm-1 4v1h2v-1H9zm0-2h1v-1H9v1z"/>
  <path d="M23 24v-1h1v2h-1v-1zm0-4v2h1v-2h-1zm-1 3h1v-1h-1v1zm-1 1v1h1v-2h-1v1zm1-4h-1v2h1v-2zm-3 2h-1v-1h-1v4h1v-2h1v2h1v-4h-1v1zm0-2h-1v1h1v-1zm-4 1v3h1v-4h-1v1zm-1 4h1v-1h-1v1zm0-3v-2h-1v4h1v-2zm-3 0h-1v-1H9v4h1v-2h1v2h1v-4h-1v1zm0-2h-1v1h1v-1z"/>
</g>

<g class="digits" fill="#FFF" style="display: none;">
  <path class="zero" d="M79 20h-2v5h3v-5h-1zm0 2v2h-1v-3h1v1z"/>
  <path class="one" d="M80 24v1h-3v-1h1v-2h-1v-1h1v-1h1v4h1z"/>
  <path class="two" d="M80 22h-1v-1h1v1zm-1 3h1v-1h-2v1h1zm0-3h-1v1h1v-1zm-1-2h-1v1h2v-1h-1zm-1 3v1h1v-1h-1z"/>
  <path class="three" d="M79 24v-1h1v1h-1zm1-3h-1v1h1v-1zm-2 1v1h1v-1h-1zm0-2h-1v1h2v-1h-1zm-1 4v1h2v-1h-2z"/>
  <path class="four" d="M80 21v4h-1v-2h-2v-3h1v2h1v-1h1z"/>
  <path class="five" d="M79 24v-1h1v1h-1zm0-3h1v-1h-3v3h2v-1h-1v-1h1zm-2 3v1h2v-1h-2z"/>
  <path class="six" d="M79 21h-1v-1h2v1h-1zm-2 0v3h1v-1h1v1h-1v1h2v-3h-2v-1h-1z"/>
  <path class="seven" d="M80 20v5h-1v-4h-2v-1h3z"/>
  <path class="eight" d="M79 20h-2v5h3v-5h-1zm0 4h-1v-1h1v1zm0-2h-1v-1h1v1z"/>
  <path class="nine" d="M79 20h-2v3h2v2h1v-5h-1zm0 2h-1v-1h1v1z"/>
  <path class="decimal" d="M71 24h1v1h-1z"/>
</g>

<g class="prices" fill="#FFF">
  <g class="line-0"></g>
  <g class="line-1"></g>
  <g class="line-2"></g>
  <g class="line-3"></g>
  <g class="line-4"></g>
</g>

<g class="ghostie-head"><g class="ghostie-head-head"><path d="M57 72h1v1h-1zm1 1h1v1h-1zm-3-3h1v1h-1zm1 1h1v1h-1zm-3-2h2v1h-2zm10 15h1v5h-1zM51 68h2v1h-2zm11 12h1v4h-1zM38 67h13v1H38zm23 10h1v3h-1zm-1-2h1v2h-1zm-1-1h1v1h-1zm-30 0h1v1h-1zm-2 3h1v3h-1zm1-2h1v2h-1zm-2 5h1v4h-1zm-1 4h1v5h-1zm11-16h2v1h-2zm-3 2h1v1h-1zm-1 1h1v1h-1zm-2 2h1v1h-1zm4-4h2v1h-2zm-3 3h1v1h-1z"/><path d="M63 89v-5h-1v-4h-1v-3h-1v-2h-1v-1h-1v-1h-1v-1h-1v-1h-1v-1h-2v-1h-2v-1H38v1h-2v1h-2v1h-1v1h-1v1h-1v1h-1v1h-1v2h-1v3h-1v4h-1v5z" fill="#FFF"/><path d="M39 73v1h-3v1h-1v1h-1v1h-1v2h-1v2h1v1h1v1h2v1h3v1h11v-1h3v-1h2v-1h1v-1h1v-2h-1v-2h-1v-1h-1v-1h-1v-1h-3v-1z"/><path d="M39 74v1h-3v1h-1v1h-1v2h-1v2h1v1h2v1h3v1h11v-1h3v-1h2v-1h1v-2h-1v-2h-1v-1h-1v-1h-3v-1z" fill="#FFF"/><g class="ghostie-head-eyes"><g class="ghostie-head-eyes-squint"><path d="M37 78v1h1v2h-2v1h4v-2h-1v-1h-1v-1zm15 0v1h-1v2h2v1h-4v-2h1v-1h1v-1z"/></g><g class="ghostie-head-eyes-angry"><path d="M51 80v-1h-1v1h-2v1h1v1h4v-2z"/><path d="M37 78h1v1h-1z"/><path d="M39 80v-1h-1v1h-2v2h4v-1h1v-1h-1z"/><path d="M51 78h1v1h-1z"/></g><g class="ghostie-head-eyes-happy"><path d="M36 82h1v-2h3v2h1v-2h-1v-1h-3v1h-1z"/><path d="M48 82h1v-2h3v2h1v-2h-1v-1h-3v1h-1z"/></g><g class="ghostie-head-eyes-sleepy"><path d="M36 79h1v2h3v-2h1v2h-1v1h-3v-1h-1z"/><path d="M48 79h1v2h3v-2h1v2h-1v1h-3v-1h-1z"/></g><g class="ghostie-head-eyes-droid"><path d="M50 79v3h1v-4h-1v1z"/><path d="M38 79v3h1v-4h-1v1z"/></g><g class="ghostie-head-eyes-evil"><path d="M36 79h1v1h2v1h1v1h-3v-1h-1z"/><path d="M53 79h-1v1h-2v1h-1v1h3v-1h1z"/></g><g class="ghostie-head-eyes-bored"><path d="M36 80h5v1h-1v1h-1v-1h-3z"/><path d="M48 80h5v1h-1v1h-1v-1h-3z"/></g></g></g><path d="M88 0H0v89h89V0h-1zm0 88H1V1h87v87z" fill="#FFF"/></g>

<script type='text/javascript'><![CDATA[

  const gw119Root = document.getElementById('gw119');

  if (gw119Root) {
    const gwRoot = gw119Root;

    const getPrice = (data, ticker) => {
      return data[ticker];
    }

    fetch('https://www.clumsyghosts.com/json/prices.json')
      .then(response => response.json())
      .then(json => {

        console.log('Last updated: ' + json.updated);
        
        const tickers = ['ADA', 'DOGE', 'MATIC', 'SHIB', 'AVAX'];
        
        const prices = [
          getPrice(json.prices, tickers[0]),
          getPrice(json.prices, tickers[1]),
          getPrice(json.prices, tickers[2]),
          getPrice(json.prices, tickers[3]),
          getPrice(json.prices, tickers[4]),
        ];

        const digitsGroup = gwRoot.querySelector('.digits');
        const pricesGroup = gwRoot.querySelector('.prices');
        let lineOffset = 0;

        for (let i=0; i<5; i++) {
          const line = pricesGroup.querySelector('.line-' + i);
          line.style.transform = 'translateY(' + lineOffset + 'px)';
          lineOffset += 10;

          const digits = String(prices[i]);
          const numDigits = digits.length;

          let digitOffset = 4 * numDigits - 6;

          for (let j = 0; j < numDigits; j++) {
            const digit = digits.charAt(j);

            switch (digit) {
              case '.':
                line.appendChild(digitsGroup.querySelector('.decimal').cloneNode(true)).style.transform = 'translateX(-' + (digitOffset - 6) + 'px)';
                digitOffset += 2;
                break;
              case '0':
                line.appendChild(digitsGroup.querySelector('.zero').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '1':
                line.appendChild(digitsGroup.querySelector('.one').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '2':
                line.appendChild(digitsGroup.querySelector('.two').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '3':
                line.appendChild(digitsGroup.querySelector('.three').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '4':
                line.appendChild(digitsGroup.querySelector('.four').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '5':
                line.appendChild(digitsGroup.querySelector('.five').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '6':
                line.appendChild(digitsGroup.querySelector('.six').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '7':
                line.appendChild(digitsGroup.querySelector('.seven').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '8':
                line.appendChild(digitsGroup.querySelector('.eight').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '9':
                line.appendChild(digitsGroup.querySelector('.nine').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
            }

            digitOffset -= 4;
          }
        }

      })
      .catch(error => {
        console.error('Failed to fetch:', error);
      });
      
    let ghostieHead = gwRoot.querySelector('.ghostie-head');
    let ghostieHeadHead = ghostieHead.querySelector('.ghostie-head-head');
    let ghostieHeadEyes = ghostieHead.querySelector('.ghostie-head-eyes');
    let ghostieEyes = ghostieHeadEyes.querySelectorAll('g');
    let ghostieHeadAnimating = false;

    let rand = Math.floor(Math.random() * ghostieEyes.length);

    for (let i=0; i<ghostieEyes.length; i++) {
      if (i == rand) {
        ghostieEyes[i].style.display = 'block';
      }
      else {
        ghostieEyes[i].style.display = 'none';
      }
    }

    ghostieHeadHead.addEventListener('click', () => {
      if (ghostieHeadAnimating == false) {
        ghostieHeadAnimating = true;
        ghostieHeadHead.classList.add('bounce');

        rand = Math.floor(Math.random() * ghostieEyes.length);

        for (let i=0; i<ghostieEyes.length; i++) {
          if (i == rand) {
            ghostieEyes[i].style.display = 'block';
          }
          else {
            ghostieEyes[i].style.display = 'none';
          }
        }

        setTimeout(() => {
          ghostieHeadAnimating = false;
          ghostieHeadHead.classList.remove('bounce');
        }, 200);
      }
    });
      
  }

]]></script>

</svg>