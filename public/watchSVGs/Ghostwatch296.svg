<svg id="gw296" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 89 89">

<style><![CDATA[

  #gw296 {
    overflow: hidden;
    outline: none;
    box-shadow: none;
    height: 100%;
  }

  @media (min-aspect-ratio: 1/1) {
    #gw296 {
      height: 100%;
      width: auto;
      margin: 0 auto;
    }
  }

  #gw296 .tickers path:nth-child(2) {
    transform: translateY(10px);
  }

  #gw296 .tickers path:nth-child(3) {
    transform: translateY(20px);
  }

  #gw296 .tickers path:nth-child(4) {
    transform: translateY(30px);
  }

  #gw296 .cauldron-frame-1 {
    opacity: 0;
    animation: gw-appear 1s steps(1) -0.6602s infinite;
  }

  #gw296 .cauldron-frame-2 {
    opacity: 0;
    animation: gw-appear 1s steps(1) -0.4602s infinite;
  }

  #gw296 .cauldron-frame-3 {
    opacity: 0;
    animation: gw-appear 1s steps(1) -0.26019999999999993s infinite;
  }

  #gw296 .cauldron-frame-4 {
    opacity: 0;
    animation: gw-appear 1s steps(1) -0.06019999999999992s infinite;
  }

  #gw296 .cauldron-frame-5 {
    opacity: 0;
    animation: gw-appear 1s steps(1) 0.13980000000000004s infinite;
  }

  #gw296 .cauldron-frame-1 {
    opacity: 1;
  }

  @keyframes gw-appear {
    0% {
      opacity: 1;
    }
    20% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

]]></style>

<path class="background" fill="#1A2C33" d="M0 0h89v89H0z"/>

<a href="https://ipfs.io/ipfs/QmWEdQncgW1WjLCGsDGPeyK6cRhLavLibYN44b7bgyudpv?filename=gw296.html" target="_blank">
  <path class="title" fill="#FFF" d="M64 10v2h-1v-2h-1v5h1v-2h1v2h1v-5zm-4 5h1v-1h-2v1zm-2-3v2h1v-3h-1zm1-2v1h2v-1h-1zm-4 0h-1v1h1v4h1v-4h1v-1h-1zm-3 2h-1v-1h-1v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1zm-3 1v3h1v-4h-1zm-1 3h1v1h-1zm-1-1h1v1h-1zm-1 0v-3h-1v5h2v-1h-1zm-3-3h-2v1h1v4h1v-4h1v-1zm-6 4v1h2v-1h-1zm2-1h1v1h-1zm-1-1h1v1h-1zm-1-1h1v1h-1zm1-1v1h2v-1h-1zm-4 0h1v1h-1zm1 2v2h1v-3h-1zm-1 2h1v1h-1zm0-2v-1h-1v3h1v-1zm-3-1v1h-1v-2h-1v5h1v-2h1v2h1v-5h-1zm-5 1v1h1v1h-2v1h3v-3h-1zm1-1v-1h-2v1h1zm-2 1v-1h-1v3h1v-1z"/>
</a>

<g class="tickers" fill="#FFF">
  <path d="M19 22h-1v-1h-1v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1zm-3 2v2h1v-3h-1zm-1 1v-2h1v-1h-2v5h2v-1h-1zm-3-1h-1v-1H9v4h1v-2h1v2h1v-4h-1zm-1-2h1v1h-1z"/>
  <path d="M19 25h1v-1h-2v1zm-1-5v1h2v-1h-1zm-1 2v2h1v-3h-1zm-3-2h-1v1h1v4h1v-4h1v-1h-1zm-3 3h1v1h-1zm0-2h1v1h-1zm-1 0h1v-1H9v5h2v-1h-1v-1h1v-1h-1z"/>
  <path d="M22 21v1h1v1h-1v1h1v1h-2v-5h2v1h-1zm-4 1v-1h-1v3h1v-1h1v1h-1v1h2v-3h-2zm1-2h-1v1h1v-1zm-4 2v2h1v-3h-1v1zm-1 3h1v-1h-1v1zm1-5h-1v1h1v-1zm-1 2v-1h-1v3h1v-2zm-3 0v2h1v-3h-1v1zm-1 1v-2h1v-1H9v5h2v-1h-1v-1z"/>
  <path d="M23 24v-1h1v2h-1v-1zm0-4v2h1v-2h-1zm-1 3h1v-1h-1v1zm-1 1v1h1v-2h-1v1zm1-4h-1v2h1v-2zm-3 2h-1v-1h-1v4h1v-2h1v2h1v-4h-1v1zm0-2h-1v1h1v-1zm-4 1v3h1v-4h-1v1zm-1 4h1v-1h-1v1zm0-3v-2h-1v4h1v-2zm-3 0h-1v-1H9v4h1v-2h1v2h1v-4h-1v1zm0-2h-1v1h1v-1z"/>
</g>

<g class="digits" fill="#FFF" style="display: none;">
  <path class="zero" d="M79 20h-2v5h3v-5h-1zm0 2v2h-1v-3h1v1z"/>
  <path class="one" d="M80 24v1h-3v-1h1v-2h-1v-1h1v-1h1v4h1z"/>
  <path class="two" d="M80 22h-1v-1h1v1zm-1 3h1v-1h-2v1h1zm0-3h-1v1h1v-1zm-1-2h-1v1h2v-1h-1zm-1 3v1h1v-1h-1z"/>
  <path class="three" d="M79 24v-1h1v1h-1zm1-3h-1v1h1v-1zm-2 1v1h1v-1h-1zm0-2h-1v1h2v-1h-1zm-1 4v1h2v-1h-2z"/>
  <path class="four" d="M80 21v4h-1v-2h-2v-3h1v2h1v-1h1z"/>
  <path class="five" d="M79 24v-1h1v1h-1zm0-3h1v-1h-3v3h2v-1h-1v-1h1zm-2 3v1h2v-1h-2z"/>
  <path class="six" d="M79 21h-1v-1h2v1h-1zm-2 0v3h1v-1h1v1h-1v1h2v-3h-2v-1h-1z"/>
  <path class="seven" d="M80 20v5h-1v-4h-2v-1h3z"/>
  <path class="eight" d="M79 20h-2v5h3v-5h-1zm0 4h-1v-1h1v1zm0-2h-1v-1h1v1z"/>
  <path class="nine" d="M79 20h-2v3h2v2h1v-5h-1zm0 2h-1v-1h1v1z"/>
  <path class="decimal" d="M71 24h1v1h-1z"/>
</g>

<g class="prices" fill="#FFF">
  <g class="line-0"></g>
  <g class="line-1"></g>
  <g class="line-2"></g>
  <g class="line-3"></g>
</g>

<g class="witchs-brew"><path fill="#0A0808" d="M24 79v2h1v-2zm-2 2v4h1v-3h1v-1h-1zm-1 4h1v1h-1zm0-6h3v-1h-2v-1h-1v1zm-1 7h1v1h-1zm-1-7v1h2v-1h-1zm-1 8h-6v1h8v-1h-1zm-1-7h-4v1h6v-1h-1zm-5-1h-1v1h2v-1zm1-2h8v-1H11v1h1zm-2 9h1v1h-1zm-1-1h1v1h-1zm0-2v-2H8v1h1v3h1v-1zm0-4h1v-2h-1v1H8v1h1zm-2 0H7v2h1v-1zm1 1h1v1H9zm13 0h1v1h-1z"/><path fill="#191919" d="M23 79h-2v1h-2v1h-6v-1h-2v-1H8v2h1v-1h1v5h1v1h1v1h8v-1h1v-1h1v-5h1v1h1v-2zm-12-2h10v1H11z"/><g class="cauldron-frame-1"><path fill="#73FF6C" d="M11 79h2v1h6v-1h2v-1H11zm-2-7h2v2H9zm5-3h2v1h-2zm2 1h1v2h-1zm-3 0h1v2h-1zm1 2h2v1h-2zm6 1h1v1h-1z"/><path fill="#A4F99D" d="M14 70h2v2h-2z"/></g><g class="cauldron-frame-2"><path fill="#73FF6C" d="M19 72h2v2h-2zm-3 0h1v1h-1zm0-3h1v1h-1zm-3 3h1v1h-1zm0-3h1v1h-1zm0 10h-2v-1h10v1h-2v1h-6zm-2-7h1v2h-1z"/><path fill="#A4F99D" d="M9 72h2v2H9z"/><path fill="#73FF6C" d="M9 71h2v1H9zm0 3h2v1H9zm-1-2h1v2H8z"/></g><g class="cauldron-frame-3"><path fill="#73FF6C" d="M21 72h1v2h-1zm-2-1h2v1h-2z"/><path fill="#A4F99D" d="M19 72h2v2h-2z"/><path fill="#73FF6C" d="M19 74h2v1h-2zm-1-2h1v2h-1zm-2-1v1h-2v-2h2zm-3 8h-2v-1h10v1h-2v1h-6zm-2-5h1v1h-1zm0-3h1v1h-1zm-3 3h1v1H8zm0-3h1v1H8z"/></g><path class="cauldron-frame-4" fill="#73FF6C" d="M18 71h1v1h-1zm3 0h1v1h-1zm0 3h1v1h-1zm-3 0h1v1h-1zm-3-3h1v1h-1zm-6 1h2v2H9zm2 7h2v1h6v-1h2v-1H11z"/><path class="cauldron-frame-5" fill="#73FF6C" d="M14 70h2v2h-2zm5 2h2v2h-2zm-9 1h1v1h-1zm1 6h2v1h6v-1h2v-1H11z"/><path fill="#fff" d="M2 82V7h2V4H1v81h3v-3zm80 5H7v-2H4v3h81v-3h-3zm5-83h-2v3h2v75h-2v3h3V4zM7 2h75v2h3V1H4v3h3z"/></g>

<script type='text/javascript'><![CDATA[

  const gw296Root = document.getElementById('gw296');

  if (gw296Root) {
    const gwRoot = gw296Root;

    const getPrice = (data, ticker) => {
      return data[ticker];
    }

    fetch('https://www.clumsyghosts.com/json/prices.json')
      .then(response => response.json())
      .then(json => {

        console.log('Last updated: ' + json.updated);
        
        const tickers = ['ADA', 'BTC', 'DOGE', 'AVAX'];
        
        const prices = [
          getPrice(json.prices, tickers[0]),
          getPrice(json.prices, tickers[1]),
          getPrice(json.prices, tickers[2]),
          getPrice(json.prices, tickers[3]),
        ];

        const digitsGroup = gwRoot.querySelector('.digits');
        const pricesGroup = gwRoot.querySelector('.prices');
        let lineOffset = 0;

        for (let i=0; i<4; i++) {
          const line = pricesGroup.querySelector('.line-' + i);
          line.style.transform = 'translateY(' + lineOffset + 'px)';
          lineOffset += 10;

          const digits = String(prices[i]);
          const numDigits = digits.length;

          let digitOffset = 4 * numDigits - 6;

          for (let j = 0; j < numDigits; j++) {
            const digit = digits.charAt(j);

            switch (digit) {
              case '.':
                line.appendChild(digitsGroup.querySelector('.decimal').cloneNode(true)).style.transform = 'translateX(-' + (digitOffset - 6) + 'px)';
                digitOffset += 2;
                break;
              case '0':
                line.appendChild(digitsGroup.querySelector('.zero').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '1':
                line.appendChild(digitsGroup.querySelector('.one').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '2':
                line.appendChild(digitsGroup.querySelector('.two').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '3':
                line.appendChild(digitsGroup.querySelector('.three').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '4':
                line.appendChild(digitsGroup.querySelector('.four').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '5':
                line.appendChild(digitsGroup.querySelector('.five').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '6':
                line.appendChild(digitsGroup.querySelector('.six').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '7':
                line.appendChild(digitsGroup.querySelector('.seven').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '8':
                line.appendChild(digitsGroup.querySelector('.eight').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
              case '9':
                line.appendChild(digitsGroup.querySelector('.nine').cloneNode(true)).style.transform = 'translateX(-' + digitOffset + 'px)';
                break;
            }

            digitOffset -= 4;
          }
        }

      })
      .catch(error => {
        console.error('Failed to fetch:', error);
      });
      
  }

]]></script>

</svg>